plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.18.0'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'maven-publish'
    id 'signing'
}

group 'org.jfxcore'
version project.findProperty('TAG_VERSION') ?: '18-SNAPSHOT'

java {
    withSourcesJar()
    withJavadocJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    implementation gradleApi()

    implementation 'org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.6.0'
    implementation 'com.google.gradle:osdetector-gradle-plugin:1.7.0'
    implementation 'org.javamodularity:moduleplugin:1.8.10'
    implementation 'org.jfxcore:compiler:[0.1,0.2)'

    testImplementation gradleTestKit()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

gradlePlugin {
    plugins {
        jfxcorePlugin {
            id = 'org.jfxcore.javafxplugin'
            displayName = 'JFXcore Gradle Plugin'
            description = 'Supports application development with JFXcore'
            implementationClass = 'org.jfxcore.gradle.JavaFXPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/jfxcore/gradle-plugin'
    vcsUrl = 'https://github.com/jfxcore/gradle-plugin'
    tags = [ 'javafx', 'jfxcore' ]
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact(tasks.jar)
            artifact(tasks["sourcesJar"])
            artifact(tasks["javadocJar"])
            pom {
                url = 'https://github.com/jfxcore/gradle-plugin'
                name = 'gradle-plugin'
                description = 'JFXcore Gradle Plugin'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://opensource.org/licenses/BSD-3-Clause'
                    }
                }
                developers {
                    developer {
                        id = 'jfxcore'
                        name = 'JFXcore'
                        organization = 'JFXcore'
                        organizationUrl = 'https://github.com/jfxcore'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jfxcore/gradle-plugin.git'
                    developerConnection = 'scm:git:https://github.com/jfxcore/gradle-plugin.git'
                    url = 'https://github.com/jfxcore/gradle-plugin'
                }
            }
        }
    }
    repositories {
        maven {
            if (project.hasProperty("REPOSITORY_USERNAME")
                    && project.hasProperty("REPOSITORY_PASSWORD")
                    && project.hasProperty("REPOSITORY_URL")) {
                credentials {
                    username = project.property("REPOSITORY_USERNAME") as String
                    password = project.property("REPOSITORY_PASSWORD") as String
                }
                url = uri(project.property("REPOSITORY_URL") as String)
            }
        }
    }
}

signing {
    sign(publishing.publications["maven"])
}
